# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$(".home").ready ->
  # Instantiate the Bloodhound suggestion engine
  engine = new Bloodhound(
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace(['title','name','lastname']),
    queryTokenizer: Bloodhound.tokenizers.whitespace
    sorter: (a, b) ->
      q = $("input:text[name=q]").val().toLowerCase()
      index_a = a.value.toLowerCase().indexOf(q)
      index_b = b.value.toLowerCase().indexOf(q)
      if index_a < index_b
        -1
      else if index_a > index_b
        1
      else
        0
    remote:
      url: "/search?autocomplete=1&q=%QUERY"
      wildcard: "%QUERY"
      rateLimitWait: 500
      filter: (suggestions) ->
        # Map the remote sources JSON arrays to a JavaScript object array
        books = $.map suggestions.results.books, (suggestion) ->
          title: suggestion['title']
          image: if suggestion['image'] then suggestion['image'] else 'https://bookopolis.com/img/no_book_cover.jpg'
          secondary_title: if suggestion['writers'].length > 0 then suggestion['writers'][0].fullname else ''
          url: suggestion['site_url']
        authors = $.map suggestions.results.authors, (suggestion) ->
          title: [suggestion['lastname'], suggestion['firstname']].join(', ')
          secondary_title: ''
          image: suggestion['image']
          url: suggestion['site_url']
        publishers = $.map suggestions.results.publishers, (suggestion) ->
          title: suggestion['name']
          secondary_title: '<%= I18n.t("publishers.label_singular")%>'
          image: ''
          url: suggestion['site_url']
        categories = $.map suggestions.results.categories, (suggestion) ->
          title: suggestion['name']
          secondary_title: ''
          image: ''
          url: suggestion['site_url']

        books.concat(authors).concat(publishers).concat(categories)
  )

  # Initialize the Bloodhound suggestion engine
  engine.initialize()

  # Instantiate the Typeahead UI
  $("#remote .typeahead").typeahead(
    hint: true
    highlight: true
    minLength: 1
  ,
    displayKey: "title"
    limit: Infinity
    source: engine.ttAdapter()
    templates: {
      empty: [
        '<div class="tt-result"><div class="tt-result-details"><span>',
          <%= "'#{I18n.t('nothing_found')}'" %>,
        '</span></div></div>'
      ].join('\n'),
      suggestion: (data) ->
        coverElement = ''
        if data.image
          coverElement = [
            '<div class="tt-result-cover">',
              '<img height="48" width="36" src="' + data.image + '">',
            '</div>'
          ].join('\n')
        return ('\
          <div class="tt-result">' +
            coverElement +
            '<div class="tt-result-details">\
              <strong>' + data.title + '</strong><br>\
              <span>' + data.secondary_title + '</span>\
            </div>\
          </div>
        ')
    }
  ).bind('typeahead:selected', (obj,datum) ->
    window.location.href = datum.url
    return
  ).on('typeahead:asyncrequest', ->
      $('#remote input.multisearch-field').addClass('loading')
      return
  ).on 'typeahead:asynccancel typeahead:asyncreceive', ->
    $('#remote input.multisearch-field').removeClass('loading')
    return

