# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$('.books.show').ready ->
  readmore($('.description'))

$(".books").ready ->
  # Instantiate the Bloodhound suggestion engine
  engine = new Bloodhound(
    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('title'),
    queryTokenizer: Bloodhound.tokenizers.whitespace
    sorter: (a, b) ->
      q = $("input:text[name=q]").val().toLowerCase()
      index_a = a.value.toLowerCase().indexOf(q)
      index_b = b.value.toLowerCase().indexOf(q)
      if index_a < index_b
        -1
      else if index_a > index_b
        1
      else
        0
    limit: 10
    remote:
      url: "/books?autocomplete=1&q=%QUERY"
      wildcard: "%QUERY"
      filter: (suggestions) ->

        # Map the remote source JSON array to a JavaScript object array
        $.map suggestions, (suggestion) ->
          title: suggestion['title']
          url: suggestion['site_url']
  )

  # Initialize the Bloodhound suggestion engine
  engine.initialize()

  # Instantiate the Typeahead UI
  $("#remote .typeahead").typeahead(
    hint: true
    highlight: true
    minLength: 1
  ,
    displayKey: "title"
    source: engine.ttAdapter()
  ).bind 'typeahead:selected', (obj,datum) ->
    window.location.href = datum.url
    return

@like = (book_id) ->
  $.ajax({
    type: "POST",
    url: '/books/'+book_id+'/like',
    success:(data) ->
      console.log 'liked'
      btn = $('.btn-like-'+book_id)
      btn.toggleClass("btn-default btn-success")
      btn.find('span').text(' ' + data.likes)

      tooltip_text = btn.attr('data-original-title')
      if tooltip_text==<%="'#{I18n.t('books.recommend')}'"%>
        btn.tooltip('hide')
          .attr('data-original-title', <%="'#{I18n.t('books.remove_recommendation')}'"%>)
          .tooltip('fixTitle')
          .tooltip('show')
      else
        btn.tooltip('hide')
          .attr('data-original-title', <%="'#{I18n.t('books.recommend')}'"%>)
          .tooltip('fixTitle')
          .tooltip('show')

      $('.btn-dislike-'+book_id)
        .removeClass( "btn-danger" )
        .addClass("btn-default")
        .attr('data-original-title', <%="'#{I18n.t('books.not_recommend')}'"%>)
        .find('span')
        .text(' ' + data.dislikes)

      refreshRecommendationsBar(data.likes, data.dislikes, book_id)
      return false
    error:(data) ->
      console.log 'Error...'
      console.log data
      return false
  })

@dislike = (book_id) ->
  $.ajax({
    type: "POST",
    url: '/books/'+book_id+'/dislike',
    success:(data) ->
      console.log 'disliked'
      btn = $('.btn-dislike-'+book_id)
      btn.toggleClass("btn-default btn-danger");
      btn.find('span').text(' ' + data.dislikes)
      tooltip_text = btn.attr('data-original-title')

      if tooltip_text==<%="'#{I18n.t('books.not_recommend')}'"%>
        btn.tooltip('hide')
          .attr('data-original-title', <%="'#{I18n.t('books.remove_recommendation')}'"%>)
          .tooltip('fixTitle')
          .tooltip('show')
      else
        btn.tooltip('hide')
          .attr('data-original-title', <%="'#{I18n.t('books.not_recommend')}'"%>)
          .tooltip('fixTitle')
          .tooltip('show')

      $('.btn-like-'+book_id)
        .removeClass( "btn-success" )
        .addClass("btn-default")
        .attr('data-original-title', <%="'#{I18n.t('books.recommend')}'"%>)
        .find('span')
        .text(' ' + data.likes)

      refreshRecommendationsBar(data.likes, data.dislikes, book_id)
    error:(data) ->
      console.log 'Error...'
      console.log data
      return false
  })

refreshRecommendationsBar = (likes, dislikes, book_id) ->
  likesPercent = if (likes+dislikes)>0 then (likes/(likes+dislikes))*100 else 0
  $('.recommendations-bar-'+book_id).attr('aria-valuenow', likes)
    .attr('aria-valuemax', likes+dislikes)
    .attr('style', 'width:'+likesPercent+'%')
